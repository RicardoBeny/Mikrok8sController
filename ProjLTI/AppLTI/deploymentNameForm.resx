<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wFwF6DxImK3BgAAAABJRU5ErkJggg==
</value>
  </data>
</root>