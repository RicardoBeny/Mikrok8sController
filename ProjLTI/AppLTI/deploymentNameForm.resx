<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ACbtHvf4P4pgvWqY0IMgAAAAAElFTkSuQmCC
</value>
  </data>
</root>