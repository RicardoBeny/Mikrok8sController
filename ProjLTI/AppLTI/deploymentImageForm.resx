<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABAuSURBVHhe7d1N
        iG8Hfcbxi7E2N1CjjS/daaLGhbYNgiBRN9ZSK7FWUFpairGtBhUXouCqCWKrEbHYjWipFYm0oSAVERVa
        K1XiS7oK2BSELlyItlWjYtQ0L+3vOF4ycz33yeRm5t75P+fzge8iy/8QeH7nzMs9BQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF9tl0+Ony3/6XwBAlSuml0/vmf5p
        +s/p3un/zup/pi9NH5peO109AQA75PT0mukz09rYH7avTTdNV00AwAm1vNJ/x7Q8za8N+vl2//QP03Mm
        AOCEuGR6w/TtaW3Aj6oHpg9PT54AgIvoyum2aW2wj6u7pldNAMBF8LvT96e1kb4QfWB6zAQAXCBvmu6b
        1ob5QvbZ6bETAHDMbpzWxvhidfvkCACAY/S2aW2EL3afmy6dAIAjtvxO/tr4npRumQCAI3RSn/zP7o8n
        AOAInPQn//3dPT1tAgAegV158t/fJyYA4Dzt0pP/2f3WBAA8TLv45L+/5V8WBAAehl1+8t/fCyYA4BB2
        /cl/f387AQAPoWn8l5Z/p+D0BACcQ8tr/7P77QkAWNH25L+/mycA4CytT/5num0CAPZpfvI/010TAPAz
        7U/++3vSBACbt4Un//396gQAm7a18V96/gQAm7Wl1/77e/EEAJu0xSf/M3kDAMAmbfXJ/0zXTACwKVt+
        8j/TFRMAbIbx3/v3AABgM7b+2v9M/hIgAJvhyf/B3j0BQD1P/ge7bgKAap78D/aD6dIJAGp58v/5bpkA
        oJYn//WunQCgkvFf7/YJACp57X/uXjIBQB1P/ufukxMA1PHkf+5+OF09AUAVT/65100AUMWTf+7vJwCo
        4sk/94XJH/0BoIon/9wdk3/yF4Aqnvxzy/g/YQKAGsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n
        /AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8Yf
        gDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGo
        Y/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrG
        P2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xz
        xh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8
        Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+A
        OsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj
        /HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/
        Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPG
        H4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wB
        qGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6
        xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8
        c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n
        /AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8Yf
        gDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGo
        Y/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrG
        P2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahz07Q2enqwj00flCQde381
        vXN68/Ty6ZnTJRNHzPhLkk56d00fn14/eRt7BIy/JGnXumf6x+mFE+fB+EuSdr1/nZ43cUjGX5LU0v3T
        X0+Pmwj8tL8kqbGvT9dOrPDkL0lqbvn5gOsn9rlxWvtiSZLU1APT8rab8cZp7YskSVJrb5k27Q+m5Qck
        1r44kiS1trwJ+MNpk541/Wha+8JIktTej6drpk25bPr3ae0LIknSVrpzWjZxM941rX0hJEnaWu+YNuEZ
        00+mtS+CJElba9nEq6d6t05rXwBJkrbaR6dqV033TmsfXpKkrXbftLwhr/W+ae2DS5K09d47Vbpk+ta0
        9qElSdp6y0Y+eqrz4mntA0uSpL2Wrazz7mntw0qSpL3eOdX50rT2YSVJ0l5fmaos3//3u/+SJOWWPw/8
        qKnG8ut/ax9UkiQd7KlTDT8AKEnS4fqNqcYrp7UPKUmSDvaKqcb109qHlCRJB3v1VMMBIEnS4ao6AHwL
        QJKkw1X1LYDlBxrWPqQkSTrYi6YaV05rH1KSJB3sKVMNfwhIkqSH7kdT1R8CWnxxWvuwkiRpry9PdW6e
        1j6sJEnaq/IfA/KDgJIk5ar+CuAZy/c0vjGtfWBJkrbet6ZHT5X+clr70JIkbb33TrWWXwe8d1r74JIk
        bbX7pmdM1f5uWvvwkiRttVumek+f/E0ASZL2WjZx2cZN+Itp7YsgSdLWevu0GZdNX53WvhCSJG2lZQtP
        T5vyrOnuae0LIklSez+efm3apN+f7p/WvjCSJLW2bN/vTZv2hmntiyNJUmtvnhg3TmtfIEmSmnpgeuvE
        PjdNa18sSZIaWn7d748mVrxtWvuiSZK0y319et5E4E2AJKml5Yf93j9dPnEIjgBJ0q73L9NzJx4mR4Ak
        ade6Z/rYdO3EI+AIkCSd9L4zLaN/w/TLE0fEEfDQLf/jfVCSdOy9b/rzafk9/uum5Z/wfdTEMfHbAbk7
        p1+ZAKCOIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgA
        oJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg
        5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACg
        liMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDn
        CACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCW
        IyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcI
        AKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYj
        IOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgA
        oJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg
        5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACg
        liMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDn
        CACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCW
        IyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcI
        AKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYj
        IOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgA
        oJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg
        5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACg
        liMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDn
        CACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKDWTdPa+GmvO6YrJgCo401A7ivTZRMA
        1PEmIHfrBACVvAnI3TABQCVvAs7d3dMzJwCo5E3AufvnCQBqeRNw7l46AUAtbwLW+7cJAKo5AtZ7wQQA
        1Xw74Of76AQA9bwJONgPptMTANTzJuBgL5sAYBO8CXiw90wAsBneBOz1xQkANsWbgFOnvj8BwOY4Ak6d
        esIEAJuz9W8HXDMBwCZt+U3A8ycA2Kytvgn4zQkANm2LbwK8AQCAsbUj4NkTADC29O2AJ04AwM9s4U3A
        dycA4CztbwJumwCAFc1vAm6eAIBzaH0T8JIJAAja3gQs/w7A6QkAeAhNR8CHJgDgkFq+HeAPAAHAw7Tr
        bwI+PwEA52GX3wT4+/8A8Ajs4puAj08AwCO0S28CfjhdNQEAR2BX3gRcPwEAR+ikvwn4yAQAHIOT+ibg
        c9MvTgDAMblxWhvhi9Xt02MnAOCY/el077Q2yBeyz07GHwAuoN+ZvjetDfOF6P3TYyYA4AJ7yvSFaW2g
        j6vvTq+cAICL6JLphum/p7XBPqrun5Z/4OdJEwBwQlw+Lb8q+F/T2oCfb/dNt06/PgEAJ9Sl06unT03/
        O62N+mH6j+nPpisnAGCHPG66bnrX9Onpa9M90/6hX17tf3Nafpbgb6Y/mZ42AQBlfmF6/PRLP/0vAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4eE6d+n825oPhcXq9
        wAAAAABJRU5ErkJggg==
</value>
  </data>
</root>