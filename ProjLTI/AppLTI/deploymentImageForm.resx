<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAQLklEQVR4Xu3dTYhvB33G8YuxNjdQo40v3WmixoW2DYIgUTfWUiuxVlBaWoqxrQYVF6LgqgliqxGx
        2I1oqRWJtKEgFREVWitV4ku6CtgUhC5ciLZVo2LUNC/t7zheMnM998nkZube+T/n84HvIsv/EHh+58zL
        PQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfbZdPjp8t/
        +l8AQJUrppdP75n+afrP6d7p/87qf6YvTR+aXjtdPQEAO+T09JrpM9Pa2B+2r003TVdNAMAJtbzSf8e0
        PM2vDfr5dv/0D9NzJgDghLhkesP07WltwI+qB6YPT0+eAICL6MrptmltsI+ru6ZXTQDARfC70/entZG+
        EH1geswEAFwgb5rum9aG+UL22emxEwBwzG6c1sb4YnX75AgAgGP0tmlthC92n5sunQCAI7b8Tv7a+J6U
        bpkAgCN0Up/8z+6PJwDgCJz0J//93T09bQIAHoFdefLf3ycmAOA87dKT/9n91gQAPEy7+OS/v+VfFgQA
        HoZdfvLf3wsmAOAQdv3Jf39/OwEAD6Fp/JeWf6fg9AQAnEPLa/+z++0JAFjR9uS/v5snAOAsrU/+Z7pt
        AgD2aX7yP9NdEwDwM+1P/vt70gQAm7eFJ//9/eoEAJu2tfFfev4EAJu1pdf++3vxBACbtMUn/zN5AwDA
        Jm31yf9M10wAsClbfvI/0xUTAGyG8d/79wAAYDO2/tr/TP4SIACb4cn/wd49AUA9T/4Hu24CgGqe/A/2
        g+nSCQBqefL/+W6ZAKCWJ//1rp0AoJLxX+/2CQAqee1/7l4yAUAdT/7n7pMTANTx5H/ufjhdPQFAFU/+
        uddNAFDFk3/u7ycAqOLJP/eFyR/9AaCKJ//cHZN/8heAKp78c8v4P2ECgBrGP2f8Aahj/HPGH4A6xj9n
        /AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8Yf
        gDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGo
        Y/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrG
        P2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xz
        xh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8
        Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+A
        OsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj
        /HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/
        Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPG
        H4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wB
        qGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6
        xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8
        c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n
        /AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8Yf
        gDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGo
        Y/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrG
        P2f8Aahj/HPGH4A6xj9n/AGoY/xzxh+AOsY/Z/wBqGP8c8YfgDrGP2f8Aahj/HPGH4A6xj9n/AGoc9O0
        Nnp6sI9NH5QkHXt/Nb1zevP08umZ0yUTR8z4S5JOendNH59eP3kbewSMvyRp17pn+sfphRPnwfhLkna9
        f52eN3FIxl+S1NL9019Pj5sI/LS/JKmxr0/XTqzw5C9Jam75+YDrJ/a5cVr7YkmS1NQD0/K2m/HGae2L
        JElSa2+ZNu0PpuUHJNa+OJIktba8CfjDaZOeNf1oWvvCSJLU3o+na6ZNuWz692ntCyJJ0la6c1o2cTPe
        Na19ISRJ2lrvmDbhGdNPprUvgiRJW2vZxKunerdOa18ASZK22kenaldN905rH16SpK1237S8Ia/1vmnt
        g0uStPXeO1W6ZPrWtPahJUnaestGPnqq8+Jp7QNLkqS9lq2s8+5p7cNKkqS93jnV+dK09mElSdJeX5mq
        LN//97v/kiTllj8P/KipxvLrf2sfVJIkHeypUw0/AChJ0uH6janGK6e1DylJkg72iqnG9dPah5QkSQd7
        9VTDASBJ0uGqOgB8C0CSpMNV9S2A5Qca1j6kJEk62IumGldOax9SkiQd7ClTDX8ISJKkh+5HU9UfAlp8
        cVr7sJIkaa8vT3VuntY+rCRJ2qvyHwPyg4CSJOWq/grgGcv3NL4xrX1gSZK23remR0+V/nJa+9CSJG29
        9061ll8HvHda++CSJG21+6ZnTNX+blr78JIkbbVbpnpPn/xNAEmS9lo2cdnGTfiLae2LIEnS1nr7tBmX
        TV+d1r4QkiRtpWULT0+b8qzp7mntCyJJUns/nn5t2qTfn+6f1r4wkiS1tmzf702b9oZp7YsjSVJrb54Y
        N05rXyBJkpp6YHrrxD43TWtfLEmSGlp+3e+PJla8bVr7okmStMt9fXreROBNgCSppeWH/d4/XT5xCI4A
        SdKu9y/TcyceJkeAJGnXumf62HTtxCPgCJAknfS+My2jf8P0yxNHxBHw0C3/431QknTsvW/682n5Pf7r
        puWf8H3UxDHx2wG5O6dfmQCgjiMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACg
        liMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDn
        CACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCW
        IyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcI
        AKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYj
        IOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgA
        oJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg
        5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACg
        liMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDn
        CACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCW
        IyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcI
        AKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYj
        IOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgA
        oJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg
        5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACg
        liMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDn
        CACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCW
        IyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcI
        AKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACgliMg5wgAoJYjIOcIAKCWIyDnCACg1k3T2vhprzum
        KyYAqONNQO4r02UTANTxJiB36wQAlbwJyN0wAUAlbwLO3d3TMycAqORNwLn75wkAankTcO5eOgFALW8C
        1vu3CQCqOQLWe8EEANV8O+Dn++gEAPW8CTjYD6bTEwDU8ybgYC+bAGATvAl4sPdMALAZ3gTs9cUJADbF
        m4BTp74/AcDmOAJOnXrCBACbs/VvB1wzAcAmbflNwPMnANisrb4J+M0JADZti28CvAEAgLG1I+DZEwAw
        tvTtgCdOAMDPbOFNwHcnAOAs7W8CbpsAgBXNbwJungCAc2h9E/CSCQAI2t4ELP8OwOkJAHgITUfAhyYA
        4JBavh3gDwABwMO0628CPj8BAOdhl98E+Pv/APAI7OKbgI9PAMAjtEtvAn44XTUBAEdgV94EXD8BAEfo
        pL8J+MgEAByDk/om4HPTL04AwDG5cVob4YvV7dNjJwDgmP3pdO+0NsgXss9Oxh8ALqDfmb43rQ3zhej9
        02MmAOACe8r0hWltoI+r706vnACAi+iS6Ybpv6e1wT6q7p+Wf+DnSRMAcEJcPi2/Kvhf09qAn2/3TbdO
        vz4BACfUpdOrp09N/zutjfph+o/pz6YrJwBghzxuum561/Tp6WvTPdP+oV9e7X9zWn6W4G+mP5meNgEA
        ZX5hevz0Sz/9LwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        uHhOnfp/NuaD4XF6vcAAAAAASUVORK5CYII=
</value>
  </data>
</root>